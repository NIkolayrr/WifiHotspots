{"version":3,"sources":["pages/home/hero.tsx","pages/home/home.tsx","core-data/firebase.tsx","components/marker.tsx","pages/map/map.tsx","pages/new-location/new-location.tsx","navigation/nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Hero","className","to","Home","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Marker","props","useState","isHidden","setIsHidden","hasData","data","isActive","hidden","name","network","pass","onClick","e","database","ref","child","id","remove","then","res","console","log","icon","faTrash","onEdit","faPen","Map","markers","setMarkers","useEffect","on","snapshot","val","defaultProps","center","lat","lng","zoom","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","Object","keys","map","el","index","marker","lon","NewLocation","undefined","currentLocation","setCurrentLocation","selectedPlace","setSelectedPlace","editEl","setEditEl","setName","setNetwork","setPass","history","useHistory","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onEditMarker","x","y","clickMap","type","value","onChange","target","update","preventDefault","itemsRef","item","push","alert","handleSubmit","Links","Routes","path","Nav","basename","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c50ef97a.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport function Hero() {\n  const onSearch = (event: any) => {\n    console.log(event.target.value)\n  }\n  return (\n    <div className='hero'>\n      <h1>Need free wifi? No problem, we got you covered.</h1>\n      <h2>Check available locations below</h2>\n      <Link to='/map'>\n        <button className='button accent'>Go to map</button>\n      </Link>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Hero } from './hero'\nimport firebase from '../../core-data/firebase'\n\nexport function Home() {\n  return (\n    <div className='home-wrapper'>\n      <Hero />\n    </div>\n  )\n}\n","import firebase from 'firebase'\n\nconst config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  databaseURL: process.env.REACT_APP_databaseURL,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n}\n\nfirebase.initializeApp(config)\nexport default firebase\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChair, faPen, faTrash, faUser } from '@fortawesome/free-solid-svg-icons'\nimport React, { useState } from 'react'\nimport firebase from '../core-data/firebase'\n\nexport const Marker = (props: any) => {\n  const [isHidden, setIsHidden] = useState(true)\n  const hasData = props.data\n\n  const deleteMarker = (e: any) => {\n    const itemsRef = firebase.database().ref('places')\n    itemsRef\n      .child(props.id)\n      .remove()\n      .then((res) => {\n        console.log(res)\n      })\n  }\n\n  const editMarker = (e: any) => {\n    props.onEdit(props.data, props.id)\n  }\n\n  return (\n    <div className='marker-container'>\n      {props.isActive ? (\n        <div className='info-container' hidden={isHidden}>\n          <h2>Name: {props.data.name} </h2>\n          <h2>Network: {props.data.network} </h2>\n          <h2>Password: {props.data.pass} </h2>\n        </div>\n      ) : (\n        <div className={`functions-container ${isHidden ? null : 'show'}`}>\n          <button className='button rounded' onClick={(e) => deleteMarker(e)}>\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n          <button className='button rounded' onClick={(e) => editMarker(e)}>\n            <FontAwesomeIcon icon={faPen} />\n          </button>\n        </div>\n      )}\n      <div\n        className={`pin ${hasData ? null : 'not-active'}`}\n        onClick={() => (hasData ? setIsHidden(!isHidden) : null)}\n      ></div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport firebase from '../../core-data/firebase'\nimport { Marker } from '../../components/marker'\n\nexport function Map() {\n  const [markers, setMarkers] = useState(null) as any\n  useEffect(() => {\n    const itemsRef = firebase.database().ref('places')\n    itemsRef.on('value', (snapshot) => {\n      setMarkers(snapshot.val())\n    })\n  }, [])\n  const defaultProps = {\n    center: {\n      lat: 42.28389,\n      lng: 22.69111,\n    },\n    zoom: 14,\n  }\n\n  const mapsKey = process.env.REACT_APP_GOOGLE_API_KEY as string\n  return (\n    <div>\n      <div style={{ height: '92vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: mapsKey }}\n          defaultCenter={defaultProps.center}\n          defaultZoom={defaultProps.zoom}\n        >\n          {markers\n            ? Object.keys(markers).map((el: any, index: number) => {\n                return (\n                  <Marker\n                    key={index}\n                    lat={markers[el].marker.lat}\n                    lng={markers[el].marker.lon}\n                    data={markers[el]}\n                    id={el}\n                    isActive={true}\n                  />\n                )\n              })\n            : null}\n        </GoogleMapReact>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport firebase from '../../core-data/firebase'\nimport { Marker } from '../../components/marker'\nimport { useHistory } from 'react-router-dom'\n\nexport function NewLocation() {\n  const [currentLocation, setCurrentLocation] = useState(undefined) as any\n  const [selectedPlace, setSelectedPlace] = useState(undefined) as any\n  const [editEl, setEditEl] = useState('')\n  const [markers, setMarkers] = useState(null) as any\n  const [name, setName] = useState('')\n  const [network, setNetwork] = useState('')\n  const [pass, setPass] = useState('')\n  const history = useHistory()\n\n  const mapsKey = process.env.REACT_APP_GOOGLE_API_KEY as string\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position: any) => {\n      const { latitude, longitude } = position.coords\n      setCurrentLocation({\n        lat: latitude,\n        lon: longitude,\n      })\n    })\n\n    const itemsRef = firebase.database().ref('places')\n    itemsRef.on('value', (snapshot) => {\n      setMarkers(snapshot.val())\n    })\n  }, [])\n\n  const clickMap = (e: any) => {\n    setSelectedPlace({\n      lat: e.lat,\n      lon: e.lng,\n      x: e.x,\n      y: e.y,\n    })\n    setEditEl('')\n  }\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    if (!name || !network || !pass) return\n    const itemsRef = firebase.database().ref('places')\n    const item = {\n      name: name,\n      network: network,\n      pass: pass,\n      marker: { ...selectedPlace },\n    }\n    itemsRef.push(item).then((data) => {\n      alert('added marker')\n      history.push('/map')\n    })\n  }\n\n  const onEditMarker = (data: any, id: string) => {\n    setName(data.name)\n    setNetwork(data.network)\n    setPass(data.pass)\n    setSelectedPlace(data.marker)\n    setEditEl(id)\n  }\n\n  const handleEdit = () => {\n    const itemsRef = firebase.database().ref('places')\n    itemsRef.child(editEl).update({\n      name: name,\n      network: network,\n      pass: pass,\n      marker: { ...selectedPlace },\n    })\n  }\n\n  return currentLocation ? (\n    <div className='new-location-page'>\n      <div className='map-wrapper'>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: mapsKey }}\n          defaultCenter={{\n            lat: currentLocation.lat,\n            lng: currentLocation.lon,\n          }}\n          onClick={(e) => clickMap(e)}\n          defaultZoom={15}\n        >\n          {markers\n            ? Object.keys(markers).map((el: any, index: number) => {\n                return (\n                  <Marker\n                    key={index}\n                    lat={markers[el].marker.lat}\n                    lng={markers[el].marker.lon}\n                    data={markers[el]}\n                    id={el}\n                    isActive={false}\n                    onEdit={onEditMarker}\n                  />\n                )\n              })\n            : null}\n          {selectedPlace ? <Marker lat={selectedPlace.lat} lng={selectedPlace.lon} isActive={false} /> : null}\n        </GoogleMapReact>\n      </div>\n      <form className='form'>\n        <label>\n          <div>Name</div>\n          <input type='text' value={name} onChange={(e) => setName(e.target.value)} />\n        </label>\n        <label>\n          <div>WiFi Network</div>\n          <input type='text' value={network} onChange={(e) => setNetwork(e.target.value)} />\n        </label>\n        <label>\n          <div>WiFi Password</div>\n          <input type='text' value={pass} onChange={(e) => setPass(e.target.value)} />\n        </label>\n        <div className='button-wrapper'>\n          <button className='button secondary' onClick={(e) => (editEl ? handleEdit() : handleSubmit(e))}>\n            {editEl ? 'save' : 'submit'}\n          </button>\n          <button className='button primary' onClick={() => setSelectedPlace(null)}>\n            clear marker\n          </button>\n        </div>\n      </form>\n    </div>\n  ) : (\n    <h1>Loading...</h1>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport { Home } from '../pages/home/home'\nimport { Map } from '../pages/map/map'\nimport { NewLocation } from '../pages/new-location/new-location'\n\nconst Links = () => {\n  return (\n    <nav className='navigation'>\n      <div className='logo'>\n        {' '}\n        <Link to='/'>WifiHotspots</Link>\n      </div>\n      <ul>\n        <li>\n          <Link to='/map'>Map</Link>\n        </li>\n        <li>\n          <Link to='/location'>Add Location</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path='/about'>\n        <h1>About</h1>\n      </Route>\n      <Route path='/location'>\n        <NewLocation />\n      </Route>\n      <Route path='/map'>\n        <Map />\n      </Route>\n      <Route path='/'>\n        <Home />\n      </Route>\n    </Switch>\n  )\n}\n\nexport function Nav() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Links />\n      <Routes />\n    </Router>\n  )\n}\n","import React from 'react'\nimport './App.scss'\nimport { Nav } from './navigation/nav'\n\nfunction App() {\n  return <Nav />\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}