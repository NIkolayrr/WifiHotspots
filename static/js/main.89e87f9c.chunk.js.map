{"version":3,"sources":["pages/home/hero.tsx","pages/home/home.tsx","core-data/firebase.tsx","components/marker.tsx","pages/map/map.tsx","pages/new-location/new-location.tsx","navigation/nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Hero","className","to","Home","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Marker","props","useState","isHidden","setIsHidden","isActive","hidden","data","name","network","pass","onClick","Map","markers","setMarkers","useEffect","database","ref","on","snapshot","val","defaultProps","center","lat","lng","zoom","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","Object","keys","map","el","index","marker","lon","id","NewLocation","undefined","currentLocation","setCurrentLocation","selectedPlace","setSelectedPlace","setName","setNetwork","setPass","history","useHistory","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","e","x","y","clickMap","type","value","onChange","target","preventDefault","itemsRef","item","push","then","alert","handleSubmit","Links","Routes","path","Nav","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89e87f9c.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport function Hero() {\n  const onSearch = (event: any) => {\n    console.log(event.target.value)\n  }\n  return (\n    <div className='hero'>\n      <h1>Need free wifi? No problem, we got you covered.</h1>\n      <h2>Check available locations below</h2>\n      <Link to='/map'>\n        <button className='button accent'>Go to map</button>\n      </Link>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Hero } from './hero'\nimport firebase from '../../core-data/firebase'\n\nexport function Home() {\n  return (\n    <div className='home-wrapper'>\n      <Hero />\n    </div>\n  )\n}\n","import firebase from 'firebase'\n\nconst config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  databaseURL: process.env.REACT_APP_databaseURL,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n}\n\nfirebase.initializeApp(config)\nexport default firebase\n","import { useState } from 'react'\n\nexport const Marker = (props: any) => {\n  const [isHidden, setIsHidden] = useState(true)\n  return (\n    <div className='marker-container'>\n      {props.isActive ? (\n        <div className='info-container' hidden={isHidden}>\n          <h2>Name: {props.data.name} </h2>\n          <h2>Network: {props.data.network} </h2>\n          <h2>Password: {props.data.pass} </h2>\n        </div>\n      ) : null}\n      <div className={`pin ${props.isActive ? null : 'not-active'}`} onClick={() => setIsHidden(!isHidden)}></div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport firebase from '../../core-data/firebase'\nimport { Marker } from '../../components/marker'\n\nexport function Map() {\n  const [markers, setMarkers] = useState(null) as any\n  useEffect(() => {\n    const itemsRef = firebase.database().ref('places')\n    itemsRef.on('value', (snapshot) => {\n      setMarkers(snapshot.val())\n    })\n  }, [])\n  const defaultProps = {\n    center: {\n      lat: 42.28389,\n      lng: 22.69111,\n    },\n    zoom: 14,\n  }\n\n  const mapsKey = process.env.REACT_APP_GOOGLE_API_KEY as string\n  return (\n    <div>\n      <div style={{ height: '92vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: mapsKey }}\n          defaultCenter={defaultProps.center}\n          defaultZoom={defaultProps.zoom}\n        >\n          {markers\n            ? Object.keys(markers).map((el: any, index: number) => {\n                return (\n                  <Marker\n                    key={index}\n                    lat={markers[el].marker.lat}\n                    lng={markers[el].marker.lon}\n                    data={markers[el]}\n                    id={el}\n                    isActive={true}\n                  />\n                )\n              })\n            : null}\n        </GoogleMapReact>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport firebase from '../../core-data/firebase'\nimport { Marker } from '../../components/marker'\nimport { useHistory } from 'react-router-dom'\n\nexport function NewLocation() {\n  const [currentLocation, setCurrentLocation] = useState(undefined) as any\n  const [selectedPlace, setSelectedPlace] = useState(undefined) as any\n  const [markers, setMarkers] = useState(null) as any\n  const [name, setName] = useState('')\n  const [network, setNetwork] = useState('')\n  const [pass, setPass] = useState('')\n  const history = useHistory()\n\n  const mapsKey = process.env.REACT_APP_GOOGLE_API_KEY as string\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position: any) => {\n      const { latitude, longitude } = position.coords\n      setCurrentLocation({\n        lat: latitude,\n        lon: longitude,\n      })\n    })\n\n    const itemsRef = firebase.database().ref('places')\n    itemsRef.on('value', (snapshot) => {\n      setMarkers(snapshot.val())\n    })\n  }, [])\n\n  const clickMap = (e: any) => {\n    setSelectedPlace({\n      lat: e.lat,\n      lon: e.lng,\n      x: e.x,\n      y: e.y,\n    })\n  }\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    if (!name || !network || !pass) return\n    const itemsRef = firebase.database().ref('places')\n    const item = {\n      name: name,\n      network: network,\n      pass: pass,\n      marker: { ...selectedPlace },\n    }\n    itemsRef.push(item).then((data) => {\n      alert('added marker')\n      history.push('/map')\n    })\n  }\n\n  return currentLocation ? (\n    <div className='new-location-page'>\n      <div className='map-wrapper'>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: mapsKey }}\n          defaultCenter={{\n            lat: currentLocation.lat,\n            lng: currentLocation.lon,\n          }}\n          onClick={(e) => clickMap(e)}\n          defaultZoom={15}\n        >\n          {markers\n            ? Object.keys(markers).map((el: any, index: number) => {\n                return (\n                  <Marker\n                    key={index}\n                    lat={markers[el].marker.lat}\n                    lng={markers[el].marker.lon}\n                    data={markers[el]}\n                    id={el}\n                    isActive={true}\n                  />\n                )\n              })\n            : null}\n          {selectedPlace ? <Marker lat={selectedPlace.lat} lng={selectedPlace.lon} isActive={false} /> : null}\n        </GoogleMapReact>\n      </div>\n      <form className='form'>\n        <label>\n          <div>Name</div>\n          <input type='text' value={name} onChange={(e) => setName(e.target.value)} />\n        </label>\n        <label>\n          <div>WiFi Network</div>\n          <input type='text' value={network} onChange={(e) => setNetwork(e.target.value)} />\n        </label>\n        <label>\n          <div>WiFi Password</div>\n          <input type='text' value={pass} onChange={(e) => setPass(e.target.value)} />\n        </label>\n        <div className='button-wrapper'>\n          <button className='button secondary' onClick={(e) => handleSubmit(e)}>\n            submit\n          </button>\n          <button className='button primary' onClick={() => setSelectedPlace(null)}>\n            clear marker\n          </button>\n        </div>\n      </form>\n    </div>\n  ) : (\n    <h1>Loading...</h1>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport { Home } from '../pages/home/home'\nimport { Map } from '../pages/map/map'\nimport { NewLocation } from '../pages/new-location/new-location'\n\nconst Links = () => {\n  return (\n    <nav className='navigation'>\n      <div className='logo'>\n        {' '}\n        <Link to='/'>WifiHotspots</Link>\n      </div>\n      <ul>\n        <li>\n          <Link to='/map'>Map</Link>\n        </li>\n        <li>\n          <Link to='/location'>Add Location</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path='/about'>\n        <h1>About</h1>\n      </Route>\n      <Route path='/location'>\n        <NewLocation />\n      </Route>\n      <Route path='/map'>\n        <Map />\n      </Route>\n      <Route path='/'>\n        <Home />\n      </Route>\n    </Switch>\n  )\n}\n\nexport function Nav() {\n  return (\n    <Router>\n      <Links />\n      <Routes />\n    </Router>\n  )\n}\n","import React from 'react'\nimport './App.scss'\nimport { Nav } from './navigation/nav'\n\nfunction App() {\n  return <Nav />\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}